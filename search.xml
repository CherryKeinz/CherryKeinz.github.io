<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Lambda序列化问题]]></title>
    <url>%2F2017%2F12%2F12%2FLambda%E5%BA%8F%E5%88%97%E5%8C%96%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[Lambda序列化问题这几天用spark遇到一个问题，到现在仍没有解决，不过查到了一些思路，可能与序列化有关。 先上代码1234567891011//不用Lambda，没有问题lines.mapToPair(new PairFunction&lt;String, Integer, Integer&gt;() &#123; private static final long serialVersionUID = 1323L; @Override public Tuple2&lt;Integer, Integer&gt; call(String word) throws Exception &#123; return new Tuple2&lt;Integer, Integer&gt;(1, 1); &#125; &#125;).take(200).forEach(v -&gt; System.out.println(v));//用lambda，报错lines.mapToPair(v -&gt; new Tuple2&lt;Integer, Integer&gt;(1, 1)).take(200).forEach(v -&gt; System.out.println(v)); 错误信息： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495017/12/12 16:00:53 WARN TaskSetManager: Lost task 0.0 in stage 1.0 (TID 1, 10.103.244.216): java.io.IOException: unexpected exception type at java.io.ObjectStreamClass.throwMiscException(ObjectStreamClass.java:1582) at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1154) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2022) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535) at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2231) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2155) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2013) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535) at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2231) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2155) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2013) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535) at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2231) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2155) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2013) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535) at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2231) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2155) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2013) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:422) at org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:76) at org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:115) at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:61) at org.apache.spark.scheduler.Task.run(Task.scala:89) at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:213) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: java.lang.NoSuchMethodException: TestSUANZI.test.$deserializeLambda$(java.lang.invoke.SerializedLambda) at java.lang.Class.getDeclaredMethod(Class.java:2130) at java.lang.invoke.SerializedLambda$1.run(SerializedLambda.java:224) at java.lang.invoke.SerializedLambda$1.run(SerializedLambda.java:221) at java.security.AccessController.doPrivileged(Native Method) at java.lang.invoke.SerializedLambda.readResolve(SerializedLambda.java:221) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1148) ... 27 more17/12/12 16:00:53 INFO TaskSetManager: Starting task 0.1 in stage 1.0 (TID 2, 10.103.244.216, partition 0,ANY, 2193 bytes)17/12/12 16:00:53 INFO TaskSetManager: Lost task 0.1 in stage 1.0 (TID 2) on executor 10.103.244.216: java.io.IOException (unexpected exception type) [duplicate 1]17/12/12 16:00:53 INFO TaskSetManager: Starting task 0.2 in stage 1.0 (TID 3, 10.103.244.216, partition 0,ANY, 2193 bytes)17/12/12 16:00:53 INFO TaskSetManager: Lost task 0.2 in stage 1.0 (TID 3) on executor 10.103.244.216: java.io.IOException (unexpected exception type) [duplicate 2]17/12/12 16:00:53 INFO TaskSetManager: Starting task 0.3 in stage 1.0 (TID 4, 10.103.244.216, partition 0,ANY, 2193 bytes)17/12/12 16:00:53 INFO TaskSetManager: Lost task 0.3 in stage 1.0 (TID 4) on executor 10.103.244.216: java.io.IOException (unexpected exception type) [duplicate 3]17/12/12 16:00:53 ERROR TaskSetManager: Task 0 in stage 1.0 failed 4 times; aborting job 有时间读一下https://www.zhihu.com/question/51491241/answer/126232275]]></content>
      <categories>
        <category>Lambda表达式</category>
      </categories>
      <tags>
        <tag>Java,</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ScrapyDemo]]></title>
    <url>%2F2017%2F11%2F30%2FScrapyDemo%2F</url>
    <content type="text"><![CDATA[建立工程 scrapy startproject scrapydemo 目录分析 scrapy.cfg: 项目的配置文件 scrapytest/: 该项目的python模块。之后您将在此加入代码。 scrapytest/items.py: 项目中的item文件. scrapytest/pipelines.py: 项目中的pipelines文件. scrapytest/settings.py: 项目的设置文件. scrapytest/spiders/: 放置spider代码的目录. Tips1. spider name/spiders/目录下创建一个文件-name: 用于区别Spider。 该名字必须是唯一的，您不可以为不同的Spider设定相同的名字。 2.多级抓取scrapy 在不同的抓取级别的Request之间传递参数的办法，下面的范例中，parse()通过meat传递给了parse_more()参数item，这样就可以再parse_more()抓取完成所有的数据后一次返123456789def parse(self, response): …… item['url'] = url.extract()[0] for item in items: yield Request(url = item['url'],meta = &#123;'item':item&#125;, callback = self.parse_more,dont_filter = True)def parse_more(self,response): item = response.meta['item'] …… yield item 总结需要修改demo的地方demo地址:https://github.com/CherryKeinz/ScrapyDemo 1. items.py修改类demoItem()里需要的字段 2. /spiders/MySpider.pyimport 要改为items.py中定义的类名from SpiderDemo.items import demoItem allowed_domains = [“http://10.3.210.84:4237/home/“]这个是 spider要求设置的一个变量,表示允许爬虫爬的网站 start_urls.append(url) url改为要爬的网址 如需保存为JSON，修改custom_settings 3.pipelines.py如需要，修改类JsonWithEncodingPipeline 常见错误 scrapy 报错 no module named win32api 的解决方案原因是缺少win32,到 http://sourceforge.net/projects/pywin32/files/找到对应的版本进行下载，直接安装即可]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo nexT的一些玩法（转载+总结）]]></title>
    <url>%2F2017%2F11%2F22%2FHexo-nexT%E7%8E%A9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[基础篇1. 常用命令12345678hexo new &quot;HelloWorld&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo p == hexo publishhexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署hexo d #部署 #可与hexo g合并为 hexo d -g 2. 文章中插入图片对于hexo，有两种方式：使用本地路径：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称。使用微博图床，地址 http://weibotuchuang.sinaapp.com/ ，将图片拖入区域中，会生成图片的URL，这就是链接地址。 3. 添加分页、标签页面 新建命令： hexo new page tags # tags可替换成其他 输入命令后，在/source下会新生成一个新的文件夹tags，在该文件夹下会有一个index.md文件。在上步新生成的myBlog/source/tags/index.md中添加type: “tags”，index.md文件内容如下：设置具体文章的tags当要为某一篇文章添加标签，只需在/source/_post目录下的具体文章的tags中添加标签即可，如： tags: [hexo,next] 4. 引入第三方服务参考 : http://theme-next.iissnan.com/third-party-services.html#swfitype 加入分享功能在主题配置文件中，jiathis: true 加入评论功能待续 加入站点内容搜索功能1) 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： $ npm install hexo-generator-searchdb –save 2) 编辑 站点配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 3) 编辑 主题配置文件，启用本地搜索功能： 1enable: true 数据统计 待续 个性化 (参考)1. 修改文章内链接文本样式（待考证）修改文件 themes\next\source\css_common\components\post\post.styl，在末尾添加如下css样式，： 1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 2. 修改文章底部的那个带#号的标签修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成/&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;/ 3. 在每篇文章末尾统一添加“本文结束”标记在路径 \themes\next\layout_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 接着打开\themes\next\layout_macro\post.swig文件，在post-body 之后， post-footer 之前添加如下画红色部分代码（post-footer之前两个DIV）： 3. 修改网页底部的桃心还是打开themes/next/layout/_partials/footer.swig，找到：class12 &lt;i class=&quot;fa fa-heart&quot;&gt;&lt;/i&gt;&lt;/span&gt; 然后还是在图标库中找到你自己喜欢的图标，然后修改画红线的部分就可以了。 4. 添加顶部加载条打开/themes/next/layout/_partials/head.swig文件，修改为 :123456&lt;meta charset=&quot;UTF-8&quot;/&gt;&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;/&gt;&lt;script src=&quot;//cdn.bootcss.com/pace/1.0.2/pace.min.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css&quot; rel=&quot;stylesheet&quot;&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;&#123;&#123; theme.android_chrome_color &#125;&#125;&quot;&gt; 参考资料：http://www.jianshu.com/p/c23902f93558http://blog.csdn.net/qq_33699981/article/details/72716951http://playingfingers.com/2016/03/26/build-a-blog/https://segmentfault.com/a/1190000003946969]]></content>
      <categories>
        <category>搭建博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
</search>
